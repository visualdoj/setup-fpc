name: 'Setup Free Pascal Compiler'

branding:
  icon: 'gitlab'
  color: '#CE9C63'

inputs:
  repo-token:
    description: 'GitHub token'
    required: true
    default: ${{ github.token }}
  version:
    description: 'Logical version of required FPC'
    required: false
    default: 'stable'
  os:
    description: 'OS label'
    required: false
    default: 'default'
  cpu:
    description: 'Host CPU'
    required: false
    default: 'x64'
  repo:
    description: 'GitHub repo with Free Pascal bundles'
    required: false
    default: 'visualdoj/build-fpc-bundle'
  tag:
    description: 'Release tag in the repo with bundles'
    required: false
    default: 'bootstrap1'
  fpc_version:
    description: 'Numeral version of required FPC'
    required: false
    default: '3.2.3'

outputs:
  cache-hit:
    description: 'The bundle was taken from cache'
    value: ${{ steps.check-cache.outputs.cache-hit }}
  # fpc-bin-path:
  #   description: 'Directory with FPC binaries'
  #   value: ${{ steps.configuration.fpc-bin-path }}
  # fpc-lib-path:
  #   description: 'Directory with ppc* binaries'
  #   value: ${{ steps.configuration.fpc-lib-path }}
  # fpc-units-path:
  #   description: 'Directory with FPC units'
  #   value: ${{ steps.configuration.fpc-units-path }}
  # fpc-cfg-path:
  #   description: 'Path to fpc.cfg'
  #   value: ${{ steps.configuration.fpc-cfg-path }}

runs:
  using: "composite"
  steps:
    - name: Cache installed FPC
      id: check-cache
      uses: actions/cache@v3
      with:
          key:  ".fpc-${{ inputs.version }}"
          path: ".fpc-${{ inputs.version }}"

    - name: Download FPC bundle
      if: steps.check-cache.outputs.cache-hit != 'true'
      run:  gh release download --dir .fpc-${{ inputs.version }} --pattern "bundle-${{ runner.os }}.tar.gz" --repo visualdoj/build-fpc-bundle
      shell: bash
      env:
          GITHUB_TOKEN: ${{ inputs.repo-token }}

    - name: Unpack tarball 
      if: steps.check-cache.outputs.cache-hit != 'true'
      working-directory: "${{ github.workspace }}"
      shell: bash
      run: |
          tar xvf ".fpc-${{ inputs.version }}/bundle-${{ runner.os }}.tar.gz" -C ".fpc-${{ inputs.version }}"

    - name: Configure (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: |
           echo "${{ github.workspace }}\\.fpc-${{ inputs.version }}\\bundle\\installed\\bin\\i386-win32" >> $GITHUB_PATH

    - name: Configure (non-Windows)
      if: runner.os != 'Windows'
      shell: bash
      run: |
           echo  "${{ github.workspace }}/.fpc-${{ inputs.version }}/bundle/installed/bin" >> $GITHUB_PATH
           echo  "${{ github.workspace }}/.fpc-${{ inputs.version }}/bundle/installed/lib/fpc/${{ inputs.fpc_version }}" >> $GITHUB_PATH
           # TODO the following line is only for macOS until version detection will be supported
           echo  "${{ github.workspace }}/.fpc-${{ inputs.version }}/bundle/installed/lib/fpc/3.3.1" >> $GITHUB_PATH

    - name: fpc.cfg
      shell: bash
      run: |
           fpcmkcfg -d basepath="${{ github.workspace }}/.fpc-${{ inputs.version }}/bundle/installed" -o "${{ github.workspace }}/.fpc-${{ inputs.version }}/fpc.cfg"
           echo "PPC_CONFIG_PATH=${{ github.workspace }}/.fpc-${{ inputs.version }}/fpc.cfg" >> $GITHUB_ENV
           cat "PPC_CONFIG_PATH=${{ github.workspace }}/.fpc-${{ inputs.version }}/fpc.cfg"
